//
//  PostInteractor.swift
//  Web-board
//
//  Created by Tawisit Rungsimuntupong on 1/5/2562 BE.
//  Copyright (c) 2562 Tawisit Rungsimuntupong. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PostBusinessLogic
{
    func getPosts(request: Post.GetPosts.Request)
    func createPost(request: Post.CreatePost.Request)
}

protocol PostDataStore
{
}

class PostInteractor: PostBusinessLogic, PostDataStore
{
    var currentPage: Int = 0
    let numberPerPage: Int = 10
    var presenter: PostPresentationLogic?
    var worker: PostWorker = PostWorker()

    func getPosts(request: Post.GetPosts.Request)
    {
        if request.isReload {
            currentPage = 1
        } else {
            if request.pagination == .next {
                currentPage = currentPage + 1
            } else {
                currentPage = currentPage - 1
            }
        }
        
        worker.getPosts(
            pageNumber: currentPage,
            numberPerPage: numberPerPage,
            completionHandler: {[weak self](response) in
                self?.presenter?.presentPosts(response: response)
        })
        
    }

    func createPost(request: Post.CreatePost.Request) {
        worker.createPost(request: request, completionHandler: {[weak self]() in
            self?.presenter?.reload()
        })
    }
}
