//
//  CommentViewController.swift
//  Web-board
//
//  Created by Tawisit Rungsimuntupong on 3/5/2562 BE.
//  Copyright (c) 2562 Tawisit Rungsimuntupong. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CommentDisplayLogic: class
{
    func displayComments(viewModel: Comment.GetComments.ViewModel)
    func reload()
}

class CommentViewController: UIViewController, CommentDisplayLogic
{
    @IBOutlet weak var tableView: UITableView!
    @IBOutlet weak var commentBtn: UIButton!
    @IBOutlet weak var content: UITextField!
    
    @IBAction func onCommentBtnClicked(_ sender: Any) {
        if let text = content.text, !text.isEmpty {
            let request = Comment.CreateComment.Request(content: text, postId: post.id)
            interactor?.createComment(request: request)
        }
    }
    var interactor: CommentBusinessLogic?
    var router: (NSObjectProtocol & CommentRoutingLogic & CommentDataPassing)?
    var post: Post.Post!
    var viewModel: Comment.GetComments.ViewModel?
    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup()
    {
        let viewController = self
        let interactor = CommentInteractor()
        let presenter = CommentPresenter()
        let router = CommentRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: Routing

    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
            router.perform(selector, with: segue)
            }
        }
    }

    // MARK: View lifecycle

    override func viewDidLoad()
    {
        super.viewDidLoad()
        navigationController?.interactivePopGestureRecognizer?.delegate = self
        tableView.dataSource = self
        commentBtn.layer.cornerRadius = 4
        getComments(postId: post.id)
    }

    func getComments(postId: Int)
    {
        let request = Comment.GetComments.Request(postId: postId)
        interactor?.getComments(request: request)
    }

    func displayComments(viewModel: Comment.GetComments.ViewModel)
    {
        self.viewModel = viewModel
        tableView.reloadData()
    }
    
    func reload() {
        content.text = ""
        getComments(postId: post.id)
    }
}

extension CommentViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return (viewModel?.comments.count ?? 0) + 1
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        if let comments = viewModel?.comments, interactor != nil {
            return interactor!.getCell(comments: comments, post: post, indexPath: indexPath, tableView: tableView)
        }
        
        return UITableViewCell()
    }
    
    
}
